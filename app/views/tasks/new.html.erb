<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Nova Tarefa - ToDoThat</title>
  <link rel="icon" href="https://cdn-icons-png.flaticon.com/512/595/595067.png" type="image/png">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap" rel="stylesheet">
<%= stylesheet_link_tag "task", "data-turbo-track": "reload" %>
  


</head>
<script>
  (function () {
    const savedTheme = localStorage.getItem('theme') || 'dark';
    document.documentElement.setAttribute('data-theme', savedTheme);
  })();
</script>


<body>
<header>
  <div class="brand">
    <i class="fas fa-tasks"></i>
    ToDoDev
  </div>
  <div class="user">
    <button title="Alternar tema" onclick="toggleTheme()">
      <i class="fas fa-sun" id="theme-icon"></i>
    </button>
    <div class="user-icon">
      <%= current_user.name&.first&.upcase || current_user.email&.first&.upcase || 'U' %>
    </div>
  </div>
</header>


<%= link_to kanban_board_path(@board), class: "back-link", data: { turbo: false } do %>
  <i class="fas fa-arrow-left"></i>
  Voltar ao quadro
<% end %>


  <main>
    <div class="form-container">
      <div class="form-header">
        <h1>
          <i class="fas fa-plus-circle"></i>
          Nova Tarefa
        </h1>
        <p>Adicione uma nova tarefa ao seu quadro</p>
      </div>

      <%= form_with model: [@board, @column, @task], local: true do |form| %>
        
        <div class="form-group">
          <%= form.label :title do %>
            <i class="fas fa-heading" style="color: #666;"></i>
            T√≠tulo
          <% end %>
          <%= form.text_field :title, placeholder: "Digite o t√≠tulo da tarefa...", required: true %>
        </div>

        <div class="form-group">
          <%= form.label :description do %>
            <i class="fas fa-align-left" style="color: #666;"></i>
            Descri√ß√£o (opcional)
          <% end %>
          <%= form.text_area :description, rows: 3, placeholder: "Descreva os detalhes da tarefa..." %>
        </div>

        <div class="form-group">
          <%= form.label :due_date do %>
            <i class="fas fa-calendar-alt" style="color: #666;"></i>
            Prazo
          <% end %>
          <div class="datetime-selects">
            <%= form.datetime_select :due_date, 
                { 
                  start_year: Date.current.year, 
                  end_year: Date.current.year + 5,
                  minute_step: 15,
                  include_blank: false,
                  default: 1.hour.from_now
                }, 
                { 
                  class: "datetime-select"
                } 
            %>
          </div>
        </div>

        <div class="form-group">
          <%= form.label :priority do %>
            <i class="fas fa-flag" style="color: #666;"></i>
            Prioridade
          <% end %>
          <%= form.select :priority, 
          options_for_select([
            ['üü¢ Baixa', 'baixa'],
            ['üü° M√©dia', 'media'],
            ['üî¥ Alta', 'alta']
          ], @task.priority), 
          { prompt: "Selecione a prioridade" }, 
          { class: "form-select" } %>

        </div>
        <div class="form-actions">
          <%= link_to kanban_board_path(@board), class: "btn btn-secondary", data: { turbo: false } do %>
            <i class="fas fa-times"></i>
            Cancelar
          <% end %>

          
          <%= form.submit "Criar Tarefa", class: "btn-primary" do %>
            <i class="fas fa-plus"></i>
            Criar Tarefa
          <% end %>
        </div>
      <% end %>
    </div>
  </main>
  <script>
      (function() {
        const savedTheme = localStorage.getItem('theme') || 'dark';
        if (savedTheme === 'light') {
          document.documentElement.classList.add('light-theme');
          document.body.classList.add('light-theme');
        } else {
          document.documentElement.classList.add('dark-theme');
          document.body.classList.add('dark-theme');
        }
      })();

      document.addEventListener('DOMContentLoaded', function () {
        const savedTheme = localStorage.getItem('theme') || 'dark';
        const themeIcon = document.getElementById('theme-icon');
        
        if (savedTheme === 'light') {
          document.body.classList.add('light-theme');
          document.documentElement.classList.add('light-theme');
          if (themeIcon) {
            themeIcon.classList.remove('fa-moon');
            themeIcon.classList.add('fa-sun');
          }
        } else {
          document.body.classList.add('dark-theme');
          document.documentElement.classList.add('dark-theme');
          if (themeIcon) {
            themeIcon.classList.remove('fa-sun');
            themeIcon.classList.add('fa-moon');
          }
        }

        const taskLists = document.querySelectorAll('.task-list');
        if (taskLists.length > 0) {
          taskLists.forEach(function (taskList) {
            new Sortable(taskList, {
              group: 'kanban-tasks',
              animation: 150,
              ghostClass: 'task-ghost',
              chosenClass: 'task-chosen',
              dragClass: 'task-drag',

              onStart: function () {
                document.body.classList.add('dragging');
              },

              onEnd: function (evt) {
                document.body.classList.remove('dragging');

                const taskId = evt.item.getAttribute('data-task-id');
                const newColumnId = evt.to.getAttribute('data-column-id');
                const newPosition = evt.newIndex;

                updateTaskPosition(taskId, newColumnId, newPosition);
              }
            });
          });
        }

        const alerts = document.querySelectorAll('.alert');
        alerts.forEach(alert => {
          setTimeout(() => {
            alert.style.transition = 'opacity 0.5s';
            alert.style.opacity = '0';
            setTimeout(() => {
              alert.remove();
            }, 500);
          }, 5000);
        });
      });

      window.toggleTheme = () => {
        const body = document.body;
        const html = document.documentElement;
        const themeIcon = document.getElementById('theme-icon');

        const isCurrentlyLight = body.classList.contains('light-theme');
        
        if (isCurrentlyLight) {
          body.classList.remove('light-theme');
          body.classList.add('dark-theme');
          html.classList.remove('light-theme');
          html.classList.add('dark-theme');
          localStorage.setItem('theme', 'dark');
          
          if (themeIcon) {
            themeIcon.classList.remove('fa-sun');
            themeIcon.classList.add('fa-moon');
          }
        } else {
          body.classList.remove('dark-theme');
          body.classList.add('light-theme');
          html.classList.remove('dark-theme');
          html.classList.add('light-theme');
          localStorage.setItem('theme', 'light');
          
          if (themeIcon) {
            themeIcon.classList.remove('fa-moon');
            themeIcon.classList.add('fa-sun');
          }
        }
      };

      function updateTaskPosition(taskId, columnId, position) {
        fetch(`/tasks/${taskId}/move_column`, {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
          },
          body: JSON.stringify({
            column_id: columnId,
            position: position
          })
        })
          .then(response => response.json())
          .then(data => {
            if (!data.success) {
              alert('Erro ao mover a tarefa: ' + (data.error || ''));
            }
          })
          .catch(error => {
            console.error('Erro:', error);
            alert('Erro ao conectar com o servidor');
          });
      }

      window.deleteTask = function (id, columnId, boardId) {
        if (!id || !columnId || !boardId) return;

        let modal = document.getElementById('confirm-modal');
        if (!modal) {
          modal = document.createElement('div');
          modal.id = 'confirm-modal';
          document.body.appendChild(modal);
        }

        modal.style.position = 'fixed';
        modal.style.top = '0';
        modal.style.left = '0';
        modal.style.width = '100%';
        modal.style.height = '100%';
        modal.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
        modal.style.display = 'flex';
        modal.style.justifyContent = 'center';
        modal.style.alignItems = 'center';
        modal.style.zIndex = '9999';

        const modalContent = document.body.classList.contains('light-theme') ? 'background: white; color: #333;' : 'background: #1e1e1e; color: white;';

        modal.innerHTML = `
          <div style="
            ${modalContent}
            padding: 30px;
            border-radius: 12px;
            text-align: center;
            max-width: 400px;
            width: 90%;
            box-shadow: 0 8px 20px rgba(0,0,0,0.2);
            font-family: 'Poppins', sans-serif;
          ">
            <h2 style="margin-bottom: 10px;">Confirma√ß√£o</h2>
            <p style="margin-bottom: 25px; font-size: 16px; background: #e0e0e0; padding: 12px 16px; border-radius: 8px; color: #222;">
              Tem certeza que deseja excluir esta tarefa?
            </p>
            <div style="display: flex; justify-content: space-around;">
              <button id="confirm-yes" style="
                background: #e74c3c;
                color: white;
                border: none;
                padding: 10px 20px;
                border-radius: 6px;
                font-weight: bold;
                cursor: pointer;
              ">Sim, excluir</button>
              <button id="confirm-no" style="
                background: #e0e0e0;
                color: #333;
                border: none;
                padding: 10px 20px;
                border-radius: 6px;
                font-weight: bold;
                cursor: pointer;
              ">Cancelar</button>
            </div>
          </div>
        `;

        document.getElementById('confirm-yes').onclick = function () {
          fetch(`/boards/${boardId}/columns/${columnId}/tasks/${id}`, {
            method: 'DELETE',
            headers: {
              'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
            }
          }).then(() => {
            window.location.href = document.referrer || '/';
          }).catch(err => {
            alert("Erro ao excluir tarefa.");
            console.error(err);
          });
        };

        document.getElementById('confirm-no').onclick = function () {
          modal.remove();
        };
      };

      window.confirmCompleteTask = function (taskId, columnId, boardId, taskTitle) {
        if (!taskId || !columnId || !boardId) return;

        let modal = document.getElementById('confirm-modal');
        if (!modal) {
          modal = document.createElement('div');
          modal.id = 'confirm-modal';
          document.body.appendChild(modal);
        }

        modal.style.position = 'fixed';
        modal.style.top = '0';
        modal.style.left = '0';
        modal.style.width = '100%';
        modal.style.height = '100%';
        modal.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
        modal.style.display = 'flex';
        modal.style.justifyContent = 'center';
        modal.style.alignItems = 'center';
        modal.style.zIndex = '9999';

        const modalContent = document.body.classList.contains('light-theme') ? 'background: white; color: #333;' : 'background: #1e1e1e; color: white;';

        modal.innerHTML = `
          <div style="
            ${modalContent}
            padding: 30px;
            border-radius: 12px;
            text-align: center;
            max-width: 400px;
            width: 90%;
            box-shadow: 0 8px 20px rgba(0,0,0,0.2);
            font-family: 'Poppins', sans-serif;
          ">
            <h2 style="margin-bottom: 10px;">Confirma√ß√£o</h2>
            <p style="margin-bottom: 25px; font-size: 16px; background: #e0e0e0; padding: 12px 16px; border-radius: 8px; color: #222;">
              Deseja marcar a tarefa <strong>${taskTitle}</strong> como conclu√≠da?
            </p>
            <div style="display: flex; justify-content: space-around;">
              <button id="confirm-complete-yes" style="
                background: #2ecc71;
                color: white;
                border: none;
                padding: 10px 20px;
                border-radius: 6px;
                font-weight: bold;
                cursor: pointer;
              ">Sim, concluir</button>
              <button id="confirm-complete-no" style="
                background: #e0e0e0;
                color: #333;
                border: none;
                padding: 10px 20px;
                border-radius: 6px;
                font-weight: bold;
                cursor: pointer;
              ">Cancelar</button>
            </div>
          </div>
        `;

        document.getElementById('confirm-complete-yes').onclick = function () {
          fetch(`/boards/${boardId}/columns/${columnId}/tasks/${taskId}/complete`, {
            method: 'PATCH',
            headers: {
              'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
            }
          }).then(() => {
            window.location.reload();
          }).catch(err => {
            alert("Erro ao marcar tarefa como conclu√≠da.");
            console.error(err);
          });
        };

        document.getElementById('confirm-complete-no').onclick = function () {
          modal.remove();
        };
      };
  </script>
</body>
</html>