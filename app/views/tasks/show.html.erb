<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= @task.title %> - Detalhes da Tarefa</title>
  <link rel="icon" href="https://cdn-icons-png.flaticon.com/512/595/595067.png" type="image/png">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>
  <%= stylesheet_link_tag "task_card", "data-turbo-track": "reload" %>

  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>
</head>
<body>
  <header>
    <div class="brand">
      <i class="fas fa-tasks"></i>
      ToDoDev
    </div>
    <div class="user">
      </button>
    </div>
  </header>


  <% if alert %>
    <div class="alert alert-danger">
      <i class="fas fa-exclamation-triangle"></i>
      <%= alert %>
    </div>
  <% end %>

<%= link_to kanban_board_path(@board), class: "back-link", data: { turbo: false } do %>
  <i class="fas fa-arrow-left"></i>
  Voltar ao quadro
<% end %>


  <main class="task-details-page">
    <div class="task-card">
      <h1>
        <i class="fas fa-sticky-note"></i> 
        <%= @task.title %>
      </h1>

      <div class="task-info">
        <p>
          <strong><i class="fas fa-align-left"></i> Descrição:</strong> 
          <%= @task.description.presence || "Sem descrição fornecida." %>
        </p>

        <p>
          <strong><i class="fas fa-info-circle"></i> Status:</strong> 
          <%= @task.status.presence || "Não definido" %>
        </p>

        <p>
          <strong><i class="fas fa-flag"></i> Prioridade:</strong>
          <% if @task.priority.present? %>
            <span class="priority <%= @task.priority.downcase %>">
              <%= @task.priority.capitalize %>
            </span>
          <% else %>
            <span class="no-priority">Não definida</span>
          <% end %>
        </p>

        <p>
          <strong><i class="fas fa-calendar-alt"></i> Prazo:</strong>
          <% if @task.due_date.present? %>
            <span class="due-date <%= 'overdue' if @task.due_date < Time.current %>">
              <%= @task.due_date.strftime("%d/%m/%Y %H:%M") %>
              <% if @task.due_date < Time.current %>
                <i class="fas fa-exclamation-triangle"></i>
              <% end %>
            </span>
          <% else %>
            <span class="no-date">Sem prazo definido</span>
          <% end %>
        </p>

        <p>
        <strong><i class="fas fa-check-circle"></i> Concluída:</strong>

        <% if @task.column&.name == "Concluído" %>
          <span class="status-done"><i class="fas fa-check"></i> Sim</span>
        <% else %>
          <span class="status-pending"><i class="fas fa-clock"></i> Não</span>
        <% end %>
      </p>


        <% if @task.created_at.present? %>
          <p>
            <strong><i class="fas fa-plus-circle"></i> Criada em:</strong>
            <%= @task.created_at.strftime("%d/%m/%Y %H:%M") %>
          </p>
        <% end %>

        <% if @task.updated_at.present? && @task.updated_at != @task.created_at %>
          <p>
            <strong><i class="fas fa-edit"></i> Última atualização:</strong>
            <%= @task.updated_at.strftime("%d/%m/%Y %H:%M") %>
          </p>
        <% end %>
      </div>

      <div class="actions">
        <%= link_to edit_board_column_task_path(@task.column.board, @task.column, @task), 
                    class: "btn btn-secondary",
                    title: "Editar esta tarefa",
                    data: { turbo: true } do %>
          <i class="fas fa-edit"></i>
          Editar
        <% end %>
        
      <button type="button" class="btn btn-danger"
              onclick="deleteTask(<%= @task.id %>, <%= @task.column.id %>, <%= @task.column.board.id %>)">
        <i class="fas fa-trash-alt"></i>
        Excluir
      </button>

        
        <% unless @task.status == "Concluído" || @task.column.name == "Concluído" %>
          <button type="button" class="btn btn-success"
        onclick="confirmCompleteTask(<%= @task.id %>, <%= @task.column.id %>, <%= @task.column.board.id %>, '<%= j @task.title %>')">
          <i class="fas fa-check"></i>
          Concluir
        </button>

        <% end %>

      </div>
    </div>
  </main>
  <script>
    (function() {
      const savedTheme = localStorage.getItem('theme') || 'dark';
      if (savedTheme === 'light') {
        document.documentElement.classList.add('light-theme');
        document.body.classList.add('light-theme');
      } else {
        document.documentElement.classList.add('dark-theme');
        document.body.classList.add('dark-theme');
      }
    })();

    document.addEventListener('DOMContentLoaded', function () {
      const savedTheme = localStorage.getItem('theme') || 'dark';
      const themeIcon = document.getElementById('theme-icon');
      
      if (savedTheme === 'light') {
        document.body.classList.add('light-theme');
        document.documentElement.classList.add('light-theme');
        if (themeIcon) {
          themeIcon.classList.remove('fa-moon');
          themeIcon.classList.add('fa-sun');
        }
      } else {
        document.body.classList.add('dark-theme');
        document.documentElement.classList.add('dark-theme');
        if (themeIcon) {
          themeIcon.classList.remove('fa-sun');
          themeIcon.classList.add('fa-moon');
        }
      }

    const taskLists = document.querySelectorAll('.task-list');
    if (taskLists.length > 0) {
      taskLists.forEach(function (taskList) {
        new Sortable(taskList, {
          group: 'kanban-tasks',
          animation: 150,
          ghostClass: 'task-ghost',
          chosenClass: 'task-chosen',
          dragClass: 'task-drag',

          onStart: function () {
            document.body.classList.add('dragging');
          },

          onEnd: function (evt) {
            document.body.classList.remove('dragging');

            const taskId = evt.item.getAttribute('data-task-id');
            const newColumnId = evt.to.getAttribute('data-column-id');
            const newPosition = evt.newIndex;

            updateTaskPosition(taskId, newColumnId, newPosition);
          }
        });
      });
    }

        const alerts = document.querySelectorAll('.alert');
        alerts.forEach(alert => {
          setTimeout(() => {
            alert.style.transition = 'opacity 0.5s';
            alert.style.opacity = '0';
            setTimeout(() => {
              alert.remove();
            }, 500);
          }, 5000);
        });
      });

      window.toggleTheme = () => {
        const body = document.body;
        const html = document.documentElement;
        const themeIcon = document.getElementById('theme-icon');

        const isCurrentlyLight = body.classList.contains('light-theme');
        
        if (isCurrentlyLight) {
          body.classList.remove('light-theme');
          body.classList.add('dark-theme');
          html.classList.remove('light-theme');
          html.classList.add('dark-theme');
          localStorage.setItem('theme', 'dark');
          
          if (themeIcon) {
            themeIcon.classList.remove('fa-sun');
            themeIcon.classList.add('fa-moon');
          }
        } else {
          body.classList.remove('dark-theme');
          body.classList.add('light-theme');
          html.classList.remove('dark-theme');
          html.classList.add('light-theme');
          localStorage.setItem('theme', 'light');
          
          if (themeIcon) {
            themeIcon.classList.remove('fa-moon');
            themeIcon.classList.add('fa-sun');
          }
        }
      };
      function updateTaskPosition(taskId, columnId, position) {
        fetch(`/tasks/${taskId}/move_column`, {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
          },
          body: JSON.stringify({
            column_id: columnId,
            position: position
          })
        })
          .then(response => response.json())
          .then(data => {
            if (!data.success) {
              alert('Erro ao mover a tarefa: ' + (data.error || ''));
            }
          })
          .catch(error => {
            console.error('Erro:', error);
            alert('Erro ao conectar com o servidor');
          });
      }
      window.deleteTask = function (id, columnId, boardId) {
        if (!id || !columnId || !boardId) return;

        let modal = document.getElementById('confirm-modal');
        if (!modal) {
          modal = document.createElement('div');
          modal.id = 'confirm-modal';
          document.body.appendChild(modal);
        }

        modal.style.position = 'fixed';
        modal.style.top = '0';
        modal.style.left = '0';
        modal.style.width = '100%';
        modal.style.height = '100%';
        modal.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
        modal.style.display = 'flex';
        modal.style.justifyContent = 'center';
        modal.style.alignItems = 'center';
        modal.style.zIndex = '9999';

        const modalContent = document.body.classList.contains('light-theme') ? 'background: white; color: #333;' : 'background: #1e1e1e; color: white;';

        modal.innerHTML = `
          <div style="
            ${modalContent}
            padding: 30px;
            border-radius: 12px;
            text-align: center;
            max-width: 400px;
            width: 90%;
            box-shadow: 0 8px 20px rgba(0,0,0,0.2);
            font-family: 'Poppins', sans-serif;
          ">
            <h2 style="margin-bottom: 10px;">Confirmação</h2>
            <p style="margin-bottom: 25px; font-size: 16px; background: #e0e0e0; padding: 12px 16px; border-radius: 8px; color: #222;">
              Tem certeza que deseja excluir esta tarefa?
            </p>
            <div style="display: flex; justify-content: space-around;">
              <button id="confirm-yes" style="
                background: #e74c3c;
                color: white;
                border: none;
                padding: 10px 20px;
                border-radius: 6px;
                font-weight: bold;
                cursor: pointer;
              ">Sim, excluir</button>
              <button id="confirm-no" style="
                background: #e0e0e0;
                color: #333;
                border: none;
                padding: 10px 20px;
                border-radius: 6px;
                font-weight: bold;
                cursor: pointer;
              ">Cancelar</button>
            </div>
          </div>
        `;

        document.getElementById('confirm-yes').onclick = function () {
          fetch(`/boards/${boardId}/columns/${columnId}/tasks/${id}`, {
            method: 'DELETE',
            headers: {
              'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
            }
          }).then(() => {
            window.location.href = document.referrer || '/';
          }).catch(err => {
            alert("Erro ao excluir tarefa.");
            console.error(err);
          });
        };

        document.getElementById('confirm-no').onclick = function () {
          modal.remove();
        };
      };

      window.confirmCompleteTask = function (taskId, columnId, boardId, taskTitle) {
        if (!taskId || !columnId || !boardId) return;

        let modal = document.getElementById('confirm-modal');
        if (!modal) {
          modal = document.createElement('div');
          modal.id = 'confirm-modal';
          document.body.appendChild(modal);
        }

        modal.style.position = 'fixed';
        modal.style.top = '0';
        modal.style.left = '0';
        modal.style.width = '100%';
        modal.style.height = '100%';
        modal.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
        modal.style.display = 'flex';
        modal.style.justifyContent = 'center';
        modal.style.alignItems = 'center';
        modal.style.zIndex = '9999';

        const modalContent = document.body.classList.contains('light-theme') ? 'background: white; color: #333;' : 'background: #1e1e1e; color: white;';

        modal.innerHTML = `
          <div style="
            ${modalContent}
            padding: 30px;
            border-radius: 12px;
            text-align: center;
            max-width: 400px;
            width: 90%;
            box-shadow: 0 8px 20px rgba(0,0,0,0.2);
            font-family: 'Poppins', sans-serif;
          ">
            <h2 style="margin-bottom: 10px;">Confirmação</h2>
            <p style="margin-bottom: 25px; font-size: 16px; background: #e0e0e0; padding: 12px 16px; border-radius: 8px; color: #222;">
              Deseja marcar a tarefa <strong>${taskTitle}</strong> como concluída?
            </p>
            <div style="display: flex; justify-content: space-around;">
              <button id="confirm-complete-yes" style="
                background: #2ecc71;
                color: white;
                border: none;
                padding: 10px 20px;
                border-radius: 6px;
                font-weight: bold;
                cursor: pointer;
              ">Sim, concluir</button>
              <button id="confirm-complete-no" style="
                background: #e0e0e0;
                color: #333;
                border: none;
                padding: 10px 20px;
                border-radius: 6px;
                font-weight: bold;
                cursor: pointer;
              ">Cancelar</button>
            </div>
          </div>
        `;

        document.getElementById('confirm-complete-yes').onclick = function () {
          fetch(`/boards/${boardId}/columns/${columnId}/tasks/${taskId}/complete`, {
            method: 'PATCH',
            headers: {
              'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
            }
          }).then(() => {
            window.location.reload();
          }).catch(err => {
            alert("Erro ao marcar tarefa como concluída.");
            console.error(err);
          });
        };

        document.getElementById('confirm-complete-no').onclick = function () {
          modal.remove();
        };
      };
  </script>
</body>
</html>